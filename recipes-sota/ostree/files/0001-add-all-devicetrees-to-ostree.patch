From 513a98776d33b7de1429690a7d944be7799194ce Mon Sep 17 00:00:00 2001
From: Luka Pivk <luka.pivk@toradex.com>
Date: Thu, 27 Dec 2018 07:12:06 +0100
Subject: [PATCH] u-boot: add support for multiple devicetrees

Adds support for deploy multiple devicetrees insides ostree. This will
grab all devicetrees in devicetree-<name>-<checksum> format and deploy
them inside ostree deployment. Instead of generating fdt_file entry
inside uEnv.txt this will generate fdt_path pointing to the location of
devicetrees.

Upstream-Status: Inappropriate
	- Patch in the current state is not ok to be upstramed. We plan
	to find a better solution to this issue and then upstream it.

Signed-off-by: Luka Pivk <luka.pivk@toradex.com>
---
 src/libostree/ostree-bootloader-uboot.c |  2 +-
 src/libostree/ostree-sysroot-deploy.c   | 30 ++++++++++++++++++++-----
 2 files changed, 26 insertions(+), 6 deletions(-)

diff --git a/src/libostree/ostree-bootloader-uboot.c b/src/libostree/ostree-bootloader-uboot.c
index 531a3756..e222a6b3 100644
--- a/src/libostree/ostree-bootloader-uboot.c
+++ b/src/libostree/ostree-bootloader-uboot.c
@@ -142,7 +142,7 @@ create_config_from_boot_loader_entries (OstreeBootloaderUboot     *self,
 
       val = ostree_bootconfig_parser_get (config, "devicetree");
       if (val)
-        g_ptr_array_add (new_lines, g_strdup_printf ("fdt_file%s=%s", index_suffix, val));
+        g_ptr_array_add (new_lines, g_strdup_printf ("fdt_path%s=%s", index_suffix, val));
 
       val = ostree_bootconfig_parser_get (config, "options");
       if (val)
diff --git a/src/libostree/ostree-sysroot-deploy.c b/src/libostree/ostree-sysroot-deploy.c
index b16f65b3..6ca0b491 100644
--- a/src/libostree/ostree-sysroot-deploy.c
+++ b/src/libostree/ostree-sysroot-deploy.c
@@ -1608,7 +1608,6 @@ install_deployment_kernel (OstreeSysroot   *sysroot,
   if (!glnx_opendirat (sysroot->sysroot_fd, deployment_dirpath, FALSE,
                        &deployment_dfd, error))
     return FALSE;
-
   /* We need to label the kernels */
   g_autoptr(OstreeSePolicy) sepolicy = ostree_sepolicy_new_at (deployment_dfd, cancellable, error);
   if (!sepolicy)
@@ -1682,11 +1681,32 @@ install_deployment_kernel (OstreeSysroot   *sysroot,
         return FALSE;
       if (errno == ENOENT)
         {
-          if (!install_into_boot (sepolicy, kernel_layout->boot_dfd, kernel_layout->devicetree_srcpath,
-                                  bootcsum_dfd, kernel_layout->devicetree_namever,
+          g_auto(GLnxDirFdIterator) dfditer = { 0, };
+          if (!glnx_dirfd_iterator_init_at (kernel_layout->boot_dfd, ".", FALSE, &dfditer, error))
+            return FALSE;
+
+          while (TRUE)
+            {
+              struct dirent *dent;
+
+              if (!glnx_dirfd_iterator_next_dent (&dfditer, &dent, cancellable, error))
+                  return FALSE;
+              if (dent == NULL)
+                break;
+              const char *name = dent->d_name;
+              if (g_str_has_prefix (name,"devicetree-"))
+              {
+                char *dash = strrchr(name,'-');
+                g_assert(dash);
+
+                char *dts_name = g_strndup (name, dash - name);
+                if (!install_into_boot (sepolicy, kernel_layout->boot_dfd, dent->d_name,
+                                  bootcsum_dfd, dts_name,
                                   sysroot->debug_flags,
                                   cancellable, error))
-            return FALSE;
+                return FALSE;
+              }
+           }
         }
     }
 
@@ -1781,7 +1801,7 @@ install_deployment_kernel (OstreeSysroot   *sysroot,
 
   if (kernel_layout->devicetree_namever)
     {
-      g_autofree char * boot_relpath = g_strconcat ("/", bootcsumdir, "/", kernel_layout->devicetree_namever, NULL);
+      g_autofree char * boot_relpath = g_strconcat ("/", bootcsumdir, "/", "", NULL);
       ostree_bootconfig_parser_set (bootconfig, "devicetree", boot_relpath);
     }
 
-- 
2.17.2


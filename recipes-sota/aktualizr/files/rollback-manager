#!/bin/bash

RUNTIME_ARG=$1

LOGDIR="/var/lib/rollback-manager"
LOGFILE="$LOGDIR/rollback.log"

echo "Running rollback manager..."

UPGRADE_AVAILABLE=$(fw_printenv upgrade_available | cut -d '=' -f 2)
ROLLBACK=$(fw_printenv rollback | cut -d '=' -f 2)
BOOTLIMIT=$(fw_printenv bootlimit | cut -d '=' -f 2)
BOOTCOUNT=$(fw_printenv bootcount | cut -d '=' -f 2)

log_to_console() {
    echo "<1>$@" >&2
}

run_and_log() {
    echo "# $@"
    $@
    echo
}

log_rollback_info() {
    echo "Writing rollback log to $LOGFILE"

    mkdir -p "$LOGDIR"

    echo "Rollback triggered because systemd boot-complete.target execution didn't completed successfully." > "$LOGFILE"
    echo -e "Please check the output of the commands below for more information.\n" >> "$LOGFILE"

    run_and_log "date" >> "$LOGFILE"
    run_and_log "uname -a" >> "$LOGFILE"
    run_and_log "cat /etc/os-release" >> "$LOGFILE"
    run_and_log "ps aux" >> "$LOGFILE"
    run_and_log "systemctl status boot-complete.target" >> "$LOGFILE"
    run_and_log "systemctl list-units --failed" >> "$LOGFILE"
    run_and_log "systemctl list-dependencies boot-complete.target" >> "$LOGFILE"
    run_and_log "systemctl status docker" >> "$LOGFILE"
    run_and_log "dmesg" >> "$LOGFILE"
    run_and_log "journalctl --no-pager" >> "$LOGFILE"
}

# stopping service
if [ "$RUNTIME_ARG" == "stop" ]; then
    # if starting a new update, remove rollback log file
    if [ "$UPGRADE_AVAILABLE" == "1" ] && [ "$BOOTCOUNT" == "0" ]; then
        rm -Rf "$LOGFILE"
    fi
    exit 0
fi

# if we are in the rollback state, warn the user
if [ "$ROLLBACK" == "1" ]; then
    log_to_console "The last update failed and you are in a rollback state."
    if [ -e "$LOGFILE" ]; then
        log_to_console "Please check the logs in $LOGFILE for more information."
    else
        log_to_console "Unfortunately the logs are unavailable, probably because the update failed before starting userspace applications."
    fi
fi

# if an update is not in progress, just return success
if [ "$UPGRADE_AVAILABLE" != "1" ]; then
    echo "Update not in progress, exiting."
    exit 0
fi

echo "Update in progress. Checking system status..."

# if boot-complete.target is not active, exit to reboot
if ! systemctl -q is-active boot-complete.target; then
    log_to_console "Update error: systemd boot-complete.target is not active (attempt $BOOTCOUNT of $BOOTLIMIT). Rebooting..."
    log_rollback_info
    exit 1
fi

echo "System boot completed successfully."
rm -Rf "$LOGFILE"

# if device is not provisioned, aktualizr will be inactive, so let's
# manually clean-up U-Boot variables to confirm the update
if [ ! -e /var/sota/import/gateway.url ]; then
    echo "Aktualizr is inactive. Cleaning up U-Boot variables..."
    fw_setenv upgrade_available 0
    fw_setenv bootcount 0
fi

echo "Rollback manager successfully executed."

exit 0
